# if the application does not need a build stage, the entire build: section can be omitted
build:

  # the image to use when building the code (should have any required build tools like the JDK)
  image: amazoncorretto:21-alpine-jdk

  # #if your tests require a throwaway database or other process it can be run as a "sidecar" container
  # these sidecar containers are linked to the build container with the specified name,
  # so for example you can access the redis container below at http://redis:6379 (default port)
  # sidecars:
  ## the list of steps to run inside the build container
  # for a gradle project this will often just be one step as shown below
  steps:
    - ./gradlew clean build --refresh-dependencies --stacktrace
containerBuild:
  imageName: tfidentity/cdc-account-management

deployment:
  name: cdc-account-management
  namespace: tfidentity
  cpu: 100m
  memory: 2Gi
  replicas: 1
  containerPort: 8080
  healthCheckPath: /cdcam/actuator/health
  healthCheckPort: 8080 #management port
  ingressPath: /cdcam
  iamRole: cdcam-execution-role
  labels:
    component: backend
    stack: java
    sub_application: cdc-account-management
    part_of: Identity-login
    stack_version: 21
    namespace: tfidentity
  volumeMounts:
    - name: cdcam-config
      mountPath: /etc/config
      connectionString: "configMap|name: cdcam-config"
  #startupSeconds: 180

environments:
  qa4:
    branch: integration-corp/.*
    cluster: tfcom-eks-na-identity-qa1.identityqa.thermofisher.net
    env:
      - name: spring.profiles.active
        value: qa4
      - name: SPRING.PROFILES.ACTIVE
        value: qa4
      - name: SPRING_CONFIG_ADDITIONAL_LOCATION
        value: file:/etc/config/app-config-qa4.yml
    deployment:
      replicas: 1
      name: cdc-account-management-qa4
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 2
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 70
    ingressDomains:
      - tfcom-api-eks-identity-qa4.identityqa.thermofisher.net